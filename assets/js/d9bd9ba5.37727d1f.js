"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9766],{3905:function(e,n,t){t.d(n,{Zo:function(){return l},kt:function(){return p}});var a=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var d=a.createContext({}),s=function(e){var n=a.useContext(d),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},l=function(e){var n=s(e.components);return a.createElement(d.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},h=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,d=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),h=s(t),p=r,m=h["".concat(d,".").concat(p)]||h[p]||u[p]||i;return t?a.createElement(m,o(o({ref:n},l),{},{components:t})):a.createElement(m,o({ref:n},l))}));function p(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,o=new Array(i);o[0]=h;var c={};for(var d in n)hasOwnProperty.call(n,d)&&(c[d]=n[d]);c.originalType=e,c.mdxType="string"==typeof e?e:r,o[1]=c;for(var s=2;s<i;s++)o[s]=t[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}h.displayName="MDXCreateElement"},85077:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return c},contentTitle:function(){return d},metadata:function(){return s},toc:function(){return l},default:function(){return h}});var a=t(83117),r=t(80102),i=(t(67294),t(3905)),o=["components"],c={sidebar_label:"5. Withdraw Funds"},d="Withdraw Funds",s={unversionedId:"candy-machine-v1/withdraw",id:"candy-machine-v1/withdraw",title:"Withdraw Funds",description:"Candy Machine v1 has been deprecated. Creating a new instance of Candy Machine v1 is no longer possible. Please use Candy Machine v2 instead.",source:"@site/docs/candy-machine-v1/06-withdraw.md",sourceDirName:"candy-machine-v1",slug:"/candy-machine-v1/withdraw",permalink:"/candy-machine-v1/withdraw",editUrl:"https://github.com/metaplex/docs/tree/main/docs/candy-machine-v1/06-withdraw.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_label:"5. Withdraw Funds"},sidebar:"sidebar",previous:{title:"4. Candy Machine Errors",permalink:"/candy-machine-v1/cm-errors"},next:{title:"Introduction",permalink:"/candy-machine-v2/introduction"}},l=[{value:"Example",id:"example",children:[{value:"NOTE",id:"note",children:[],level:3}],level:2}],u={toc:l};function h(e){var n=e.components,t=(0,r.Z)(e,o);return(0,i.kt)("wrapper",(0,a.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"withdraw-funds"},"Withdraw Funds"),(0,i.kt)("div",{className:"admonition admonition-warning alert alert--danger"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"warning")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"Candy Machine v1 has been deprecated. Creating a new instance of Candy Machine v1 is no longer possible. Please use ",(0,i.kt)("a",{parentName:"p",href:"../candy-machine-v2/introduction"},"Candy Machine v2")," instead."))),(0,i.kt)("p",null,"Candy Machine v1s rely on a special account called the config account. This account stores the big list of pointers to assets that will be minted.\nThis data is useless after the CMv1 has been fully minted. You can drain this account by using the ",(0,i.kt)("inlineCode",{parentName:"p"},"withdraw")," command."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'Usage: candy-machine-v1-cli withdraw [options]\n\nOptions:\n  -e, --env <string>              Solana cluster env name (default: "devnet")\n  -k, --keypair <path>            Solana wallet location (default: "--keypair\n                                  not provided")\n  -l, --log-level <string>        log level\n  -c, --cache-name <string>       Cache file name (default: "temp")\n  -d ,--dry                       Show Candy Machine withdraw amount without\n                                  withdrawing.\n  -ch, --charity <string>         Which charity? (default: "")\n  -cp, --charityPercent <string>  Which percent to charity? (default: "0")\n  -r, --rpc-url <string>          custom rpc url since this is a heavy command\n  -h, --help                      display help for command\n')),(0,i.kt)("h2",{id:"example"},"Example"),(0,i.kt)("p",null," To use this command, make sure you have the keypair that you made the candy machine with. Pass that keypair in as the ",(0,i.kt)("inlineCode",{parentName:"p"},"-k")," argument. This command will find all the candy machine config accounts made by that keypair and attempt to drain them.\nIts a good idea to first run this with ",(0,i.kt)("inlineCode",{parentName:"p"},"-d")," to see how much you have locked up in those accounts and to make sure you arent draining an account you need. You can also donate a percentage of this money to charity. ",(0,i.kt)("strong",{parentName:"p"},"BE CAREFUL!")," This will actually take money out of the keypair you pass in and transfer it to the address you set as the ",(0,i.kt)("inlineCode",{parentName:"p"},"--charity")," option."),(0,i.kt)("h3",{id:"note"},"NOTE"),(0,i.kt)("p",null," Your Keypair must have a little sol in it to pay the transaction fee to withdraw."),(0,i.kt)("p",null,"If it all works like it should, you should see something like:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"Total Number of Candy Machine Config Accounts to drain 50.03644952 SOL locked up in configs\nWARNING: This command will drain ALL of the Candy Machine config accounts that are owned by your current KeyPair, this will break your Candy Machine if its still in use.\n...\nHSLcb56y2wQEdaTcNoybcPJRrXuxRe3AnAXhpvJmZkMo has been withdrawn. \n...\nCongratulations, 1 config accounts have been successfully drained.\nNow you kinda rich, please consider supporting Open Source developers.\n")))}h.isMDXComponent=!0}}]);