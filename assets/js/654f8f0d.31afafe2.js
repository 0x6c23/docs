"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7662],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return m}});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),c=u(n),m=a,f=c["".concat(s,".").concat(m)]||c[m]||d[m]||o;return n?r.createElement(f,i(i({ref:t},p),{},{components:n})):r.createElement(f,i({ref:t},p))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=c;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var u=2;u<o;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}c.displayName="MDXCreateElement"},62793:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return u},toc:function(){return p},default:function(){return c}});var r=n(83117),a=n(80102),o=(n(67294),n(3905)),i=["components"],l={},s="Upload Methods",u={unversionedId:"sugar/upload-methods",id:"sugar/upload-methods",title:"Upload Methods",description:'There are currently two upload (storage) methods available in Sugar: "bundlr" and "aws". Uploading in Sugar is designed as a Rust trait to make it easier to for new methods to be added. We plan to release a developer guide for how to do this so we can support a wide-variety of upload methods.',source:"@site/docs/sugar/05-upload-methods.md",sourceDirName:"sugar",slug:"/sugar/upload-methods",permalink:"/sugar/upload-methods",editUrl:"https://github.com/metaplex/docs/tree/main/docs/sugar/05-upload-methods.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{},sidebar:"sidebar",previous:{title:"Configuration",permalink:"/sugar/configuration"},next:{title:"Deploying a Candy Machine",permalink:"/sugar/asset-preparation-and-deployment"}},p=[{value:"Bundlr",id:"bundlr",children:[],level:2},{value:"Amazon (AWS) S3",id:"amazon-aws-s3",children:[],level:2}],d={toc:p};function c(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"upload-methods"},"Upload Methods"),(0,o.kt)("p",null,"There are currently two upload (storage) methods available in Sugar: ",(0,o.kt)("inlineCode",{parentName:"p"},'"bundlr"')," and ",(0,o.kt)("inlineCode",{parentName:"p"},'"aws"'),". Uploading in Sugar is designed as a Rust trait to make it easier to for new methods to be added. We plan to release a developer guide for how to do this so we can support a wide-variety of upload methods."),(0,o.kt)("h2",{id:"bundlr"},"Bundlr"),(0,o.kt)("p",null,"Uploads to ",(0,o.kt)("a",{parentName:"p",href:"https://www.arweave.org/"},"Arweave")," using ",(0,o.kt)("a",{parentName:"p",href:"https://bundlr.network/"},"Bundlr Network")," and payments are made in ",(0,o.kt)("inlineCode",{parentName:"p"},"SOL"),"."),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},(0,o.kt)("strong",{parentName:"p"},"Note:")," Files are only stored for 7 days when uploaded with Bundlr on ",(0,o.kt)("inlineCode",{parentName:"p"},"devnet"),".")),(0,o.kt)("h2",{id:"amazon-aws-s3"},"Amazon (AWS) S3"),(0,o.kt)("p",null,"Uploads files to Amazon S3 storage. When using the ",(0,o.kt)("inlineCode",{parentName:"p"},'"aws"'),", you need to specify the bucket name ",(0,o.kt)("inlineCode",{parentName:"p"},'"awsS3Bucket"')," in the configuration file and set up the credentials in your system. In most cases, this will involve creating a file ",(0,o.kt)("inlineCode",{parentName:"p"},"~/.aws/credentials")," with the following properties:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"[default]\naws_access_key_id=<ACCESS KEY ID>\naws_secret_access_key=<SECRET ACCESS KEY>\nregion=<REGION>\n")),(0,o.kt)("p",null,"It is also important to set up the ACL permission of the bucket correctly to enable ",(0,o.kt)("inlineCode",{parentName:"p"},'"public-read"')," and apply Cross-Origin Resource Sharing (CORS) rules to enable content access requested from a different origin (necessary to enable wallets and blockchain explorers load the metadata/media files). More information about these configurations can be found at:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://docs.aws.amazon.com/AmazonS3/latest/userguide/example-bucket-policies.html"},"Bucket policy examples")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://aws.amazon.com/premiumsupport/knowledge-center/s3-configure-cors/"},"CORS configuration"))))}c.isMDXComponent=!0}}]);