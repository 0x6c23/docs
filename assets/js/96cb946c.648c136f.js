"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[197],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=a.createContext({}),l=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=l(e.components);return a.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=l(n),m=r,f=p["".concat(c,".").concat(m)]||p[m]||d[m]||o;return n?a.createElement(f,s(s({ref:t},u),{},{components:n})):a.createElement(f,s({ref:t},u))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,s=new Array(o);s[0]=p;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:r,s[1]=i;for(var l=2;l<o;l++)s[l]=n[l];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},457:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return i},contentTitle:function(){return c},metadata:function(){return l},toc:function(){return u},default:function(){return p}});var a=n(7462),r=n(3366),o=(n(7294),n(3905)),s=["components"],i={sidebar_position:2},c="Examples",l={unversionedId:"development/clients/js-sdk/examples",id:"development/clients/js-sdk/examples",isDocsHomePage:!1,title:"Examples",description:"Store",source:"@site/docs/development/clients/js-sdk/examples.md",sourceDirName:"development/clients/js-sdk",slug:"/development/clients/js-sdk/examples",permalink:"/development/clients/js-sdk/examples",editUrl:"https://github.com/metaplex/docs/tree/main/docs/development/clients/js-sdk/examples.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"sidebar",previous:{title:"Getting started",permalink:"/development/clients/js-sdk/getting-started"},next:{title:"Community Docs",permalink:"/community"}},u=[{value:"Store",id:"store",children:[]},{value:"Auctions",id:"auctions",children:[]},{value:"Vaults",id:"vaults",children:[]},{value:"Metadata",id:"metadata",children:[]}],d={toc:u};function p(e){var t=e.components,n=(0,r.Z)(e,s);return(0,o.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"examples"},"Examples"),(0,o.kt)("h2",{id:"store"},"Store"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"// Init store\nconst { storeId } = await actions.initStore({\n  connection,\n  wallet,\n});\n\n// Get existing store id\nconst storeId = await Store.getPDA(publicKey as AnyPublicKey);\n")),(0,o.kt)("h2",{id:"auctions"},"Auctions"),(0,o.kt)("p",null,"Getting existing auctions:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"// Get Auction data\nconst auctionManagers = await AuctionManager.findMany(connection, {\n  store: storeId,\n});\nconst auctions = await Promise.all(\n  auctionManagers.map((m) => m.getAuction(connection))\n);\n\n// Get Auction extended data(instansSalePrice, totalUncancelledBids, tickSize...)\nconst auctionsExtKeys = await Promise.all(\n  auctionManagers.map((am) => AuctionExtended.getPDA(am.data.vault))\n);\nconst auctionsExt = await Promise.all(\n  auctionsExtKeys.map((k) => AuctionExtended.load(connection, k))\n);\n")),(0,o.kt)("h2",{id:"vaults"},"Vaults"),(0,o.kt)("p",null,"Getting auction vaults:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"// Get auction vault\nconst vaults = await Promise.all(auctionManagers.map(am => Vault.load(connection, am.data.vault)));\n\n// Get safety deposit boxes\nconst safetyDepositBoxes = await Promise.all(vaults.map(v => v.getSafetyDepositBoxes(connection)));\n")),(0,o.kt)("h2",{id:"metadata"},"Metadata"),(0,o.kt)("p",null,"Getting store metadata:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"// Load store\nconst store = await Store.load(connection, storeId);\n// Get all whitelisted creators\nconst creators = await store.getWhitelistedCreators(connection);\n// Get creator PDA addresses\nconst creatorPDAs = await Promise.all(\n  creators.map((creator) => WhitelistedCreator.getPDA(store.pubkey, creator.data.address))\n);\n// Filter store creators\nconst storeCreators = creators.filter(\n  (creator, index) => creatorPDAs[index].toBase58() === creator.pubkey.toBase58()\n);\n// Get store metadata\nconst storeMetadata = await Metadata.findMany(connection, { creators: storeCreators.map(sc => sc.data.address) });\n")))}p.isMDXComponent=!0}}]);