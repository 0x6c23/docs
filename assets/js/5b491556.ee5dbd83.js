"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5254],{3905:function(e,n,t){t.d(n,{Zo:function(){return d},kt:function(){return s}});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var p=r.createContext({}),l=function(e){var n=r.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},d=function(e){var n=l(e.components);return r.createElement(p.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,d=c(e,["components","mdxType","originalType","parentName"]),m=l(t),s=a,h=m["".concat(p,".").concat(s)]||m[s]||u[s]||o;return t?r.createElement(h,i(i({ref:n},d),{},{components:t})):r.createElement(h,i({ref:n},d))}));function s(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=m;var c={};for(var p in n)hasOwnProperty.call(n,p)&&(c[p]=n[p]);c.originalType=e,c.mdxType="string"==typeof e?e:a,i[1]=c;for(var l=2;l<o;l++)i[l]=t[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},59467:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return c},contentTitle:function(){return p},metadata:function(){return l},toc:function(){return d},default:function(){return m}});var r=t(83117),a=t(80102),o=(t(67294),t(3905)),i=["components"],c={},p="A Front End Experience for Minting",l={unversionedId:"candy-machine-v2/MintFrontend",id:"candy-machine-v2/MintFrontend",title:"A Front End Experience for Minting",description:"While the Candy Machine is ready to mint, in most cases you will want to provide a front end experience to allow your community the chance to mint, too.",source:"@site/docs/candy-machine-v2/08-MintFrontend.md",sourceDirName:"candy-machine-v2",slug:"/candy-machine-v2/MintFrontend",permalink:"/candy-machine-v2/MintFrontend",editUrl:"https://github.com/metaplex/docs/tree/main/docs/candy-machine-v2/08-MintFrontend.md",tags:[],version:"current",sidebarPosition:8,frontMatter:{},sidebar:"sidebar",previous:{title:"Mint Tokens",permalink:"/candy-machine-v2/MintTokens"},next:{title:"Update the Candy Machine",permalink:"/candy-machine-v2/Update"}},d=[{value:"Setting up",id:"setting-up",children:[],level:2}],u={toc:d};function m(e){var n=e.components,t=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"a-front-end-experience-for-minting"},"A Front End Experience for Minting"),(0,o.kt)("p",null,"While the Candy Machine is ready to mint, in most cases you will want to provide a front end experience to allow your community the chance to mint, too."),(0,o.kt)("p",null,"You can use the ",(0,o.kt)("a",{parentName:"p",href:"./fair-launch/introduction"},"Fair Launch Protocol")," front end experience, which is already in the Metaplex repository and downloaded when you executed the ",(0,o.kt)("inlineCode",{parentName:"p"},"git clone")," command."),(0,o.kt)("h2",{id:"setting-up"},"Setting up"),(0,o.kt)("p",null,"Open the file ",(0,o.kt)("inlineCode",{parentName:"p"},".env")," located in the folder ",(0,o.kt)("inlineCode",{parentName:"p"},"~/metaplex/js/packages/fair-launch")," and modify the following:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Set the value of ",(0,o.kt)("inlineCode",{parentName:"p"},"REACT_APP_CANDY_MACHINE_ID")," to match the ",(0,o.kt)("inlineCode",{parentName:"p"},"ID")," of your Candy Machine. The ",(0,o.kt)("inlineCode",{parentName:"p"},"ID")," was in the output of the ",(0,o.kt)("inlineCode",{parentName:"p"},"upload")," command and can also be found inside your Candy Machine cache file - this is located in the same directory that you executed the ",(0,o.kt)("inlineCode",{parentName:"p"},"upload")," command (e.g., ",(0,o.kt)("inlineCode",{parentName:"p"},".cache/devnet-example"),")")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Specify the intended network you wish to use. In this example we are using the ",(0,o.kt)("inlineCode",{parentName:"p"},"devnet"),", you need to uncomment lines 3-4 (and comment lines 6-7):"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre"},"REACT_APP_CANDY_MACHINE_ID=ABceMmLMwmSfL5mL1cCrpPMKGupMXUezEY3JyZ1JSd6h\n\nREACT_APP_SOLANA_NETWORK=devnet\nREACT_APP_SOLANA_RPC_HOST=https://api.devnet.solana.com\n\n#REACT_APP_SOLANA_NETWORK=mainnet-beta\n#REACT_APP_SOLANA_RPC_HOST=https://trashpandas.rpcpool.com\n")))),(0,o.kt)("p",null,"After these changes are made, run the commands ",(0,o.kt)("inlineCode",{parentName:"p"},"yarn install")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"yarn start")," inside the folder ",(0,o.kt)("inlineCode",{parentName:"p"},"~/metaplex/js/packages/fair-launch"),". This will start a local server with a mint front end.  From here, you should customise the mint page and deploy it your host service."))}m.isMDXComponent=!0}}]);